# name: Docker Build Push Deploy

# on:
#   push:
#     tags: [ 'v*.*.*' ]

# env:
#   REGISTRY: docker.io
#   IMAGE_NAME: abir10101/tickets-app

# jobs:
#   build_push_deploy:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v3
#       - name: Setup Docker buildx
#         uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf
#       - name: Login into registry ${{ env.REGISTRY }}
#         uses: docker/login-action@v2
#         with:
#           registry: ${{ env.REGISTRY }}
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_TOKEN }}
#       - name: Extract Docker metadata
#         id: meta
#         uses: docker/metadata-action@v4
#         with:
#           images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
#           tags: |
#             type=semver,pattern={{version}}
#             # type=semver,pattern={{major}}.{{minor}}
#             # type=semver,pattern={{major}}
#             # type=sha
#       - name: Build and push Docker image
#         uses: docker/build-push-action@v3
#         with:
#           context: .
#           push: true
#           tags: ${{ steps.meta.outputs.tags }}
#           labels: ${{ steps.meta.outputs.labels }}
#       # - name: Kubernetes set context
#       #   uses: Azure/k8s-set-context@v1
#       #   with:
#       #     method: kubeconfig
#       #     kubeconfig: ${{ vars.KUBECONFIG }}
#       # - name: Depoloy with kubernates
#       #   run: |
#       #     kubectl apply -k kubernates/
#       #     kubectl rollout restart -f kubernates/deployments/ticketsapp-deployment.yml
name: Publish

on:
  push:
    tags: [ 'v*.*.*' ]

permissions:
  contents: read

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set output
        id: vars
        run: echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT
      - name: Check output
        run: |
          echo ${{ steps.vars.outputs.tag }}
      - name: trigger jenkins Job
        uses: toptal/jenkins-job-trigger-action@master
        with:
          jenkins_url: "http://172.105.36.103:8080"
          jenkins_user: "abir101"
          jenkins_token: ${{ vars.JENKINS_TOKEN }}
          job_name: "publish"
          job_params: |
            {
              "TAG_NAME": ${{ steps.vars.outputs.tag }}
            }
